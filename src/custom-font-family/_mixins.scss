// Mixin to set the root variable for sans-serif font
@mixin root-sans-font($font: $default-root-sans) {

	:root {
		// Sets the --font-sans variable to the provided font name or falls back to a default sans-serif font
		--font-sans: var(--#{$font}-font, var(--default-sans));
	}
}

// Mixin to set the root variable for monospace font
@mixin root-mono-font($font: $default-root-mono) {

	:root {
		// Sets the --font-mono variable to the provided font name or falls back to a default monospace font
		--font-mono: var(--#{$font}-font, var(--default-mono));
	}
}

// Mixin to set font-family with optional !important declaration
@mixin font-family($font, $important: false) {

	@if $important {
		// Overrides font-family with !important if $important is true
		font-family: $font !important;
	} @else {
		font-family: $font;
	}
}

// Mixin for applying sans-serif font-family
@mixin sans-font($important: false) {
	// Applies font-family specified in --font-sans variable with optional !important
	@include font-family(var(--font-sans), $important);
}

// Mixin for applying monospace font-family
@mixin mono-font($important: false) {
	// Applies font-family specified in --font-mono variable with optional !important
	@include font-family(var(--font-mono), $important);
}

@mixin fonts-group() {

	@include root-sans-font();
	@include root-mono-font();

	// Define font variables
	:root {
		--__bodyFontStack: var(--font-sans);
		--cp-font-monospace: var(--font-mono);
		--cp-font-sans-serif: var(--font-sans);
		--cu-font-family: var(--font-sans);
		--e-a-font-family: var(--font-sans);
		--font-family-system: var(--font-sans);
		--font-display: var(--font-sans);
		--font-family-apple: var(--font-sans);
		--font-headline: var(--font-sans);
		--font-primary: var(--font-sans);
		--font-system: var(--font-sans);
		--sn-stylekit-sans-serif-font: var(--font-sans);
		--tnp-font-family: var(--font-sans);
		--neko-font-family: var(--font-sans);
	}
}
